---
#- hosts: all
#  become: true
#  vars:
#    container_count: 4
#    default_container_name: docker
#    default_container_image: ubuntu
#    default_container_command: sleep 1d

#  tasks:
#    - name: Install aptitude
#      apt:
#        name: aptitude
#        state: latest
#        update_cache: true
#
#    - name: Install required system packages
#      apt:
#        pkg:
#          - apt-transport-https
#          - ca-certificates
#          - curl
#          - software-properties-common
#          - python3-pip
#          - virtualenv
#          - python3-setuptools
#            #          - pip3
#        state: latest
#        update_cache: true

#    - name: Add Docker GPG apt Key
#      apt_key:
#        url: https://download.docker.com/linux/ubuntu/gpg
#        state: present

#    - name: Add Docker Repository
#      apt_repository:
#        repo: deb https://download.docker.com/linux/ubuntu focal stable
#        state: present

#    - name: Update apt and install docker-ce
#      apt:
#        name: docker-ce
#        state: latest
#        update_cache: true

#    - name: Install Docker Module for Python
#      pip:
#        name: docker
# - name: Pull an Image "Sonatype/nexus3"
#   community.docker.docker_image:
#     name: sonatype/nexus3
#     source: pull
#- name: Create a Nexus Container
#  command: docker run -d -p 8081:8081 --name nexus sonatype/nexus3  
 - name: Create a Nexus container
   docker_container:
      name: Container_Nexus
      image: sonatype/nexus3
      state: started
      ports:
      - 8081
#- name: check if container is running
#  command: docker ps
#- name: creata a nexus user
#   set_fact:
#     nexus_local_users:
#        - username: ragavendira
#          first_name: ragavendira
#          last_name: rajathirumalai
#          email: ragavendira.rajathirumlai@expleogroup.com
#          password: "s3cr3t"
#          roles:
#          - developers
#    - name: deploy nginx docker container
#      docker_container:
#        image: nginx:stable
#        name: nginx
#        state: started
#        auto_remove: true
#        ports:
#          - "8080:80"


